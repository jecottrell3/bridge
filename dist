#! /bin/python3
from __future__ import print_function

import sys, os, re
from random import *

####################################################################
####			Data					####
####################################################################

down = 1
freq = 1
pair = 0
reps = 1000

argv = sys.argv[1:]
prog = sys.argv[0]

####################################################################
####			Functions				####
####################################################################

def usage():
	print('''usage: %s -drp? deals=1000
	-r	reverse/DOWN
	-d	dist/COUNT
	-p	pair/HAND''' % prog)

def shuffle(): return sample(range(52),52)

def dist(hand, updn):
	hash = [0,0,0,0]
	for card in hand: hash[card & 3] += 1
	return	'%x%x%x%x' % tuple(sorted(hash,reverse=updn))

####################################################################

####################################################################
####			Args / Flags				####
####################################################################

while argv:
	arg = argv.pop(0)
	if '-' != arg[0]: reps = int(arg); continue
	down = 'r' not in arg
	freq = 'd' not in arg
	pair = 'p'     in arg
	if     'h'     in arg:	usage(); exit()

cent = (50.0 if pair else 25.0)/reps	# 100 divided by 2 Sides or 4 Hands

print('Deals: %d, Field: %s, Sort: %s, Pair: %d' %
	(reps, ('Dist','Count')[freq], ('Up', 'Down')[down], pair))

####################################################################
####			Compute Loop				####
####################################################################

histo = dict()
while	reps:
	reps -= 1
	deal = shuffle()

	todo =	[ deal[ 0:26], deal[26:52] ] if pair else \
		[ deal[ 0:13], deal[13:26], deal[26:39], deal[39:52] ]

	for hand in todo:
		key = dist(hand, down)
		try:	histo[key] += 1
		except: histo[key]  = 1

####################################################################
####			Print Results				####
####################################################################

print('Rank\tDist\t Count\tSubtot\tPercent\tReverse')
cum = 0.0; seq = 1
for	item in sorted(histo.items(), key=lambda x: x[freq], reverse=down):
	pct = item[1] * cent
	print('%4d' % seq, '%04X' % item[0], '%6d' % item[1], 
		'%6.3f' % cum,
		'%6.3f' % pct,
		'%6.3f' % (100.0 - cum), sep='\t')
	cum += pct; seq += 1

####################################################################
#END#
